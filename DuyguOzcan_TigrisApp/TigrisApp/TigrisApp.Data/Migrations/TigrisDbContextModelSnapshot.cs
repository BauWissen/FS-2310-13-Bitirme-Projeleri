// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TigrisApp.Data;

#nullable disable

namespace TigrisApp.Data.Migrations
{
    [DbContext(typeof(TigrisDbContext))]
    partial class TigrisDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.17");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.Basket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Basket");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.BasketItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BasketId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BasketItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasketId = 1,
                            ProductId = 1,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8580),
                            Description = "kolye",
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8599),
                            Name = "Kolye"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8601),
                            Description = "yüzük",
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8602),
                            Name = "Yüzük"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8604),
                            Description = "bileklik",
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8604),
                            Name = "Bileklik"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8606),
                            Description = "küpe",
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8606),
                            Name = "Küpe"
                        });
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.Colour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8874),
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8875),
                            Name = "Silver"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8877),
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8878),
                            Name = "Gold"
                        });
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AppUserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7513),
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7519)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7556),
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7556)
                        });
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8839),
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8840),
                            Name = "Kadın"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8843),
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8843),
                            Name = "Erkek"
                        });
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.Identity.AppRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.Identity.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adress")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<int>("GenderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8957),
                            Description = "çelik",
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8958),
                            Name = "Çelik"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8960),
                            Description = "zirkon",
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8960),
                            Name = "Zirkon"
                        });
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7630),
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7631),
                            Name = "order1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7632),
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7633),
                            Name = "order2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7634),
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7635),
                            Name = "order2"
                        });
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductPrice")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("OrderDetail");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            ProductPrice = 1000,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 2,
                            ProductPrice = 2000,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 3,
                            ProductPrice = 4000,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColourId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaterialId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("SupplierId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ColourId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 2,
                            CategoryId = 1,
                            ColourId = 1,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7590),
                            IsActive = true,
                            MaterialId = 1,
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7591),
                            Name = "halka küpe",
                            Price = 1000m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 3,
                            CategoryId = 1,
                            ColourId = 2,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7598),
                            IsActive = true,
                            MaterialId = 1,
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7598),
                            Name = "çelik kolye",
                            Price = 1000m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 4,
                            CategoryId = 2,
                            ColourId = 2,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7600),
                            IsActive = true,
                            MaterialId = 2,
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7601),
                            Name = "çelik yüzük",
                            Price = 4000m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 2,
                            CategoryId = 2,
                            ColourId = 2,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7603),
                            IsActive = true,
                            MaterialId = 1,
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 854, DateTimeKind.Local).AddTicks(7604),
                            Name = "taşlı yüzük",
                            Price = 600m,
                            SupplierId = 1
                        });
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.ProductGender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductGenders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenderId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            GenderId = 2,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            GenderId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 4,
                            GenderId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 5,
                            GenderId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 6,
                            GenderId = 2,
                            ProductId = 4
                        });
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8903),
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8903),
                            Name = "Türkiye"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8905),
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8905),
                            Name = "Çin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8906),
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8907),
                            Name = "Malezya"
                        });
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("RegionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8929),
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8929),
                            Name = "Supplier1",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8932),
                            ModifiedDate = new DateTime(2024, 4, 6, 16, 8, 24, 853, DateTimeKind.Local).AddTicks(8932),
                            Name = "Supplier2",
                            RegionId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("TigrisApp.Entity.Concrete.Identity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TigrisApp.Entity.Concrete.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TigrisApp.Entity.Concrete.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("TigrisApp.Entity.Concrete.Identity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TigrisApp.Entity.Concrete.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TigrisApp.Entity.Concrete.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.Customer", b =>
                {
                    b.HasOne("TigrisApp.Entity.Concrete.Identity.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.Product", b =>
                {
                    b.HasOne("TigrisApp.Entity.Concrete.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TigrisApp.Entity.Concrete.Colour", "Colour")
                        .WithMany()
                        .HasForeignKey("ColourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TigrisApp.Entity.Concrete.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TigrisApp.Entity.Concrete.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Colour");

                    b.Navigation("Material");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.ProductGender", b =>
                {
                    b.HasOne("TigrisApp.Entity.Concrete.Gender", "Gender")
                        .WithMany("ProductGenders")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TigrisApp.Entity.Concrete.Product", "Product")
                        .WithMany("ProductGenders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.Gender", b =>
                {
                    b.Navigation("ProductGenders");
                });

            modelBuilder.Entity("TigrisApp.Entity.Concrete.Product", b =>
                {
                    b.Navigation("ProductGenders");
                });
#pragma warning restore 612, 618
        }
    }
}
